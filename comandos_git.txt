- web necesarios:
https://training.github.com/downloads/es_ES/github-git-cheat-sheet/,m 
https://git-scm.com/docs/git#_git_commands

- ver las credenciales:
	git config --global -l
- configurar las credenciales:
	git config --global user.name "usuario"
	git config --global user.email "email"
	
- empezar git, se hace una sola vez. y debe aparecer una carpeta oculta .git
git init
- ver el status
git status
- adicionar archivos al git. con esto los archivos se ponen en una zona llamada "stage"
git add .
- confirmar los cambios
git commit -m "algun mensaje"
- si anteriormente ya se ha hecho commit y no hay ninguna carpeta o archivo nuevo se puede reemplazar los 2 comandos anteriores (add y commit) 
por: git commit -am "mensajito"
- ver los cambios que se haya realizado al archivo 
git diff
- quitar los cambios, dejar como estaba
git checkout 
- ver el historico de los commit
git log
- quitar del stage lo que se haya agregado, puede ser  todo  o un archivo. se puede verificar con el status
	* todo:
	git add .
	git reset
	* solo el archivo o carpeta:
	git add .
	git reset carpeta/archivo
- ver los cambios que se han hecho sobre un archivo
git show
- ver las diferenciass en un archivo.
git diff
- rectificar el nombre del mensaje
git commit --amend -m "mensaje"

- cambiar el nombre del archivo comiteado
git add .
git commit -m "mensajito"
git mv nombre_archivo nuevo_nombre_archivo
- quitar los cambios, dejarlo como estaba
git checkout .
- guardar los cambios localmente (no comitear) para luego seguir trabajandolos.
git stash   		--> guarda localmente y los borra para luego recuperarlos y seguir trabajando sobre ellos
git stash apply  	--> para volver los cambios que guarde con stash y seguir modificandolos
git stash list		--> lista lo que se tiene
git stash pop <identificador del stash>

git branch -r --> solo remotas
git branch -a --> locales y remotas

- crear rama
git chekout -b nombre_rama --> la crea y se dirige a esa rama. Cuando se hace de esta forma y luego se quiere subir los cambios a dicha rama. En lugar del push, hacer : git push --set-upstream origin feature/shipmentConfirm


- abortar un merge
git merge --abort


- eliminar rama remota, situarce en otra rama
git branch -d nombre_rama

- actualizar el git, para ver las nuevas ramas creadas. Trae los cambios de todas las ramas
 git fetch   o git fetch --all
 
-  ver la configuracion, para cambiar lo que desee. Por ejemplo el user, name, el editor con que trabajar (core.editor)
git config --list

- ver si el repositorio esta referenciado con git externo
git remote show origin

- ver help del comandos
git comando --help

- revertir los cambios hechos con el commit
git revert  numero_del_commit (se obtiene con git log)